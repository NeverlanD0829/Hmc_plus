//引用的作用
    //给变量起别名
    //语法：   数据类型（与原名同类型） &别名=原名；

//引用的注意事项
    //引用必须初始化
    //一旦初始化就不可以更改了。

//引用做函数参数
    //作用：函数传参时，可利用引用的技术让形参修饰实参。
    //优点：可以简化指针修改实参

//引用函数返回值（返回值类型可以使引用）
    //作用：引用可以作为函数的返回值存在的
    //注意：不要返回局部变量引用
    //用法：函数调用作为左值

#include<iostream>
#include<string>
using namespace std;


//交换值得函数
//值传递
// int& test01()
// {
//     int a=10;               //局部变量，存放在栈区
//     //return a;
// }


//将局部变量转为静态变量后返回，并引用。
int& test02()
{
    static int b=20;               //局部变量存储在栈区，将其转变为静态变量，存放在全局区后，可进行引用。
    return b;
}


int main()
{
    //不能返回局部变量的引用。
    //nt& ref =test01();             //test01 返回局部变量a的值，  给a1起个别名 ref。
    //cout<<"ref="<<ref<<endl;        //ref是a的别名，也是局部变量，返回局部变量则会报错。

    int& ref2 =test02();             //test02 返回静态变量a的值，  给b起个别名 ref。

    ref2=100;
    test02()=500;                      //ref2是test02（函数返回值b）的别名，这两个语句相当于给函数中返回值全局区的b赋值。

    cout<<"ref2="<<ref2<<endl;         //ref是a的别名，也是局部变量，返回局部变量则会报错。
    cout<<"ref2="<<ref2<<endl;
    cout<<"ref2="<<ref2<<endl;

    

    system("pause");
    return 0;
}