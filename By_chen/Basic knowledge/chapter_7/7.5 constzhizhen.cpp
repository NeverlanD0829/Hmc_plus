//指针的作用： 可以通过指针间接访问内存
    // 内存编号是从0开始记录的，一般用十六进制数字表示
    // 可以利用指针变量保存地址

//语法：  数据类型 * 变量名；
//指针变量和普通变量的区别：
    //  指针变量存放的是地址，普通变量存放的是数据；
    //  指针变量通过  *  操作符操作指针变量指向的内存空间，该过程称为解应用。


//const修饰指针有三种情况：
    //const修饰指针——常量指针
    //const修饰常量——指针常量
    //const即修饰常量，又修饰指针



#include<iostream>
using namespace std;

int main()
{
    int a=10;
    int b=20;

    //1、const修饰的是指针，指正指向可以改，指针指向的值不可以改
    const int *p1=&a;                           //指针常量
    cout<<"指针指向的地址是："<<p1<<endl;
    p1=&b;
    cout<<"指针指向的地址是："<<p1<<endl;

    //*p1=100;              //指针指向的值不可以改，会报错

    cout<<endl;

 
    //2、const修饰常量，指针指向不可以改，指针指向的值可以改
    int *const p2=&a;                           //常量指针
    cout<<"指针指向的值是："<<*p2<<endl;
    *p2=100;
    cout<<"指针指向的值是："<<*p2<<endl;

    //p2=&b;                  //指针指向不可变，会报错

    cout<<endl;

    //3、const既修饰指针，又修饰常量,指向和指向的值都不可以改变。

    const int *const p3=&a;
    cout<<"指针指向的地址是："<<p3<<endl;
    cout<<"指针指向的值是："<<*p3<<endl;
    //*p3=100;
    //p3=&b;                  //都不可变，会报错



    system("pause");
    return 0;
}


//技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量

